{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Alert/Alert.module.css","components/PageTitle/PageTitle.module.css","components/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Alert/Alert.js","components/Layout/Layout.js","components/PageTitle/PageTitle.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onCreateContact","this","Box","maxWidth","onSubmit","TextField","id","label","variant","fullWidth","type","onChange","required","margin","Button","color","Component","useStyles","makeStyles","theme","wrap","width","padding","spacing","buttonContainer","textAlign","ContactListItem","onDelete","classes","ListItem","disableGutters","Paper","className","Grid","container","alignItems","item","xs","ListItemText","IconButton","aria-label","onClick","root","ContactList","contacts","onDeleteItem","TransitionGroup","component","List","map","CSSTransition","key","timeout","classNames","styles","Filter","inTransition","in","unmountOnExit","marginBottom","Typography","defaultProps","filter","position","top","right","zIndex","breakpoints","up","Alert","show","onHide","onEntered","setTimeout","elevation","severity","minHeight","overflow","Layout","children","CssBaseline","Container","down","fontSize","PageTitle","appear","App","alert","addContact","contact","uuid","find","prevState","changeFilter","handleFilter","toLowerCase","includes","deleteContact","itemId","hideAlert","localContacts","localStorage","getItem","JSON","parse","prevProp","prevContacts","currentContacts","setItem","stringify","filteredContacts","mb","length","Boolean","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48deaf89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__rSsSG\",\"enterActive\":\"ContactList_enterActive__3n2Oh\",\"exit\":\"ContactList_exit__2genr\",\"exitActive\":\"ContactList_exitActive__3jTi0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Filter_enter__2NlWw\",\"enterActive\":\"Filter_enterActive__EHMQe\",\"exit\":\"Filter_exit__XWZGx\",\"exitActive\":\"Filter_exitActive__fZojT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Alert_enter__BlLLG\",\"enterActive\":\"Alert_enterActive__1fgU3\",\"exit\":\"Alert_exit__3tvoo\",\"exitActive\":\"Alert_exitActive__1fqc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"PageTitle_appear__22SII\",\"appearActive\":\"PageTitle_appearActive__2wqEK\"};","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onCreateContact: () => { }\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    if (name && number) {\r\n      this.props.onCreateContact(this.state.name, this.state.number);\r\n      return this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <Box maxWidth={300}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            id=\"name-field\"\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            required\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            id=\"number-field\"\r\n            label=\"Number\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            required\r\n            margin=\"normal\"\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Add contact\r\n        </Button>\r\n        </form>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  wrap: {\r\n    width: '100%',\r\n    padding: theme.spacing(1, 0.5, 1, 2)\r\n  },\r\n  buttonContainer: {\r\n    textAlign: 'right'\r\n  }\r\n}));\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem disableGutters>\r\n      <Paper className={classes.wrap}>\r\n        <Grid container alignItems=\"center\" spacing={0}>\r\n          <Grid item xs={6}>\r\n            <ListItemText>{name}:</ListItemText>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <ListItemText>{number}</ListItemText>\r\n          </Grid>\r\n          <Grid item xs={2} className={classes.buttonContainer}>\r\n            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={onDelete}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  CSSTransition,\r\n  TransitionGroup,\r\n} from 'react-transition-group';\r\nimport List from '@material-ui/core/List';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n  }\r\n});\r\n\r\nconst ContactList = ({ contacts, onDeleteItem }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TransitionGroup component={List} classes={{ root: classes.root }}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <CSSTransition key={id} timeout={250} classNames={styles}>\r\n            <ContactListItem\r\n              key={id}\r\n              name={name}\r\n              number={number}\r\n              onDelete={() => onDeleteItem(id)}\r\n            />\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  })).isRequired,\r\n  onDeleteItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport styles from './Filter.module.css'\r\n\r\nconst Filter = ({ value, onChange, inTransition }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={inTransition}\r\n      timeout={250}\r\n      classNames={styles}\r\n      unmountOnExit\r\n    >\r\n      <Box marginBottom={2}>\r\n        <Typography variant=\"h6\">Find contacts by name</Typography>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          onChange={e => onChange(e.target.value)}\r\n        />\r\n      </Box>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  inTransition: PropTypes.bool.isRequired\r\n};\r\n\r\nFilter.defaultProps = {\r\n  filter: ''\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport styles from './Alert.module.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 100,\r\n    width: '85%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '45%'\r\n    }\r\n  }\r\n}));\r\n\r\n\r\nconst Alert = ({ show, onHide }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CSSTransition in={show}\r\n      timeout={250}\r\n      classNames={styles}\r\n      onEntered={() => setTimeout(onHide, 2000)}\r\n      unmountOnExit>\r\n      <MuiAlert className={classes.root} elevation={6} variant=\"filled\" severity=\"error\">Contact already exists!</MuiAlert>\r\n    </CSSTransition>\r\n  )\r\n};\r\n\r\nAlert.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Alert;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  wrap: {\r\n    position: 'relative',\r\n    minHeight: '100vh',\r\n    padding: theme.spacing(7, 5),\r\n    overflow: 'hidden'\r\n  }\r\n}));\r\n\r\nconst Layout = ({ children, theme }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n        <Paper className={classes.wrap}>\r\n          {children}\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  )\r\n};\r\n\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport styles from './PageTitle.module.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: 36\r\n    }\r\n  }\r\n}));\r\n\r\nconst PageTitle = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={styles}\r\n      unmountOnExit\r\n    >\r\n\r\n      <Typography className={classes.root} variant=\"h2\" color=\"primary\">Phonebook</Typography>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default PageTitle;","import React, { Component } from 'react';\nimport { uuid } from 'uuidv4';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport Alert from './Alert';\n\nimport '../index.css';\nimport Layout from './Layout/Layout';\nimport PageTitle from './PageTitle/PageTitle';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    alert: false\n  };\n\n  componentDidMount() {\n    const localContacts = localStorage.getItem('contacts');\n\n    if (localContacts) {\n      this.setState({\n        contacts: JSON.parse(localContacts)\n      })\n    }\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    const prevContacts = prevState.contacts;\n    const currentContacts = this.state.contacts;\n\n    if (prevContacts !== currentContacts) {\n      localStorage.setItem('contacts', JSON.stringify(currentContacts));\n    }\n  }\n\n  // Add new contact\n  addContact = (name, number) => {\n    const contact = {\n      id: uuid(),\n      name: name,\n      number: number\n    };\n\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      return this.setState({ alert: true })\n    }\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact]\n      };\n    })\n  };\n\n  // Filter\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  handleFilter = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  // Delete a contact\n  deleteContact = itemId => {\n\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== itemId),\n      };\n    });\n  }\n\n  // Hide alert\n  hideAlert = () => {\n    return this.setState({ alert: false });\n  }\n\n  render() {\n    const { filter, alert } = this.state;\n    const filteredContacts = this.handleFilter();\n\n    return (\n      <Layout>\n        <Alert show={alert} onHide={this.hideAlert} />\n\n        <Box mb={5}>\n          <PageTitle />\n          <ContactForm onCreateContact={this.addContact} />\n        </Box>\n\n        <Box>\n          <Typography variant=\"h3\">Contacts</Typography>\n          <Filter value={filter} onChange={this.changeFilter} inTransition={filteredContacts.length > 1 || Boolean(filter)} />\n\n          {filteredContacts.length > 0 && (\n            <ContactList contacts={filteredContacts} onDeleteItem={this.deleteContact} />\n          )}\n        </Box>\n      </Layout>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}